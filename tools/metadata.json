{
  "1": {
    "title": "Two Sum",
    "level": "Easy",
    "tags": [
      "Array",
      "Hash Table"
    ]
  },
  "2": {
    "title": "Add Two Numbers",
    "level": "Medium",
    "tags": [
      "Linked List",
      "Math"
    ]
  },
  "19": {
    "title": "Remove Nth Node From End of List",
    "level": "Medium",
    "tags": [
      "Linked List",
      "Two Pointers"
    ]
  },
  "21": {
    "title": "Merge Two Sorted Lists",
    "level": "Easy",
    "tags": [
      "Linked List",
      "Recursion"
    ]
  },
  "23": {
    "title": "Merge k Sorted Lists",
    "level": "Hard",
    "tags": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ]
  },
  "24": {
    "title": "Swap Nodes in Pairs",
    "level": "Medium",
    "tags": [
      "Linked List",
      "Recursion"
    ]
  },
  "61": {
    "title": "Rotate List",
    "level": "Medium",
    "tags": [
      "Linked List",
      "Two Pointers"
    ]
  },
  "86": {
    "title": "Partition List",
    "level": "Medium",
    "tags": [
      "Linked List",
      "Two Pointers"
    ]
  },
  "1394": {
    "title": "Find Lucky Integer in an Array",
    "level": "Easy",
    "tags": [
      "Array",
      "Hash Table",
      "Counting"
    ]
  },
  "3304": {
    "title": "Find the K-th Character in String Game I",
    "level": "Easy",
    "tags": [
      "Math",
      "Bit Manipulation",
      "Recursion",
      "Simulation"
    ]
  },
  "3307": {
    "title": "Find the K-th Character in String Game II",
    "level": "Hard",
    "tags": [
      "Math",
      "Bit Manipulation",
      "Recursion"
    ]
  },
  "703": {
    "title": "Kth Largest Element in a Stream",
    "level": "Easy",
    "tags": [
      "Tree",
      "Design",
      "Binary Search Tree",
      "Heap (Priority Queue)",
      "Binary Tree",
      "Data Stream"
    ]
  },
  "1353": {
    "title": "Maximum Number of Events That Can Be Attended",
    "level": "Medium",
    "tags": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  "136": {
    "title": "Single Number",
    "level": "Easy",
    "tags": [
      "Array",
      "Bit Manipulation"
    ]
  },
  "191": {
    "title": "Number of 1 Bits",
    "level": "Easy",
    "tags": [
      "Divide and Conquer",
      "Bit Manipulation"
    ]
  },
  "201": {
    "title": "Bitwise AND of Numbers Range",
    "level": "Medium",
    "tags": [
      "Bit Manipulation"
    ]
  },
  "231": {
    "title": "Power of Two",
    "level": "Easy",
    "tags": [
      "Math",
      "Bit Manipulation",
      "Recursion"
    ]
  },
  "338": {
    "title": "Counting Bits",
    "level": "Easy",
    "tags": [
      "Dynamic Programming",
      "Bit Manipulation"
    ]
  },
  "260": {
    "title": "Single Number III",
    "level": "Medium",
    "tags": [
      "Array",
      "Bit Manipulation"
    ]
  },
  "206": {
    "title": "Reverse Linked List",
    "level": "Easy",
    "tags": [
      "Linked List",
      "Recursion"
    ]
  },
  "371": {
    "title": "Sum of Two Integers",
    "level": "Medium",
    "tags": [
      "Math",
      "Bit Manipulation"
    ]
  },
  "26": {
    "title": "Remove Duplicates from Sorted Array",
    "level": "Easy",
    "tags": [
      "Array",
      "Two Pointers"
    ]
  },
  "75": {
    "title": "Sort Colors",
    "level": "Medium",
    "tags": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  "167": {
    "title": "Two Sum II - Input Array Is Sorted",
    "level": "Medium",
    "tags": [
      "Array",
      "Two Pointers",
      "Binary Search"
    ]
  },
  "234": {
    "title": "Palindrome Linked List",
    "level": "Easy",
    "tags": [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion"
    ]
  },
  "11": {
    "title": "Container With Most Water",
    "level": "Medium",
    "tags": [
      "Array",
      "Two Pointers",
      "Greedy"
    ]
  },
  "283": {
    "title": "Move Zeroes",
    "level": "Easy",
    "tags": [
      "Array",
      "Two Pointers"
    ]
  },
  "1290": {
    "title": "Convert Binary Number in a Linked List to Integer",
    "level": "Easy",
    "tags": [
      "Linked List",
      "Math"
    ]
  },
  "3136": {
    "title": "Valid Word",
    "level": "Easy",
    "tags": [
      "String"
    ]
  },
  "207": {
    "title": "Course Schedule",
    "level": "Medium",
    "tags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  "210": {
    "title": "Course Schedule II",
    "level": "Medium",
    "tags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  "743": {
    "title": "Network Delay Time",
    "level": "Medium",
    "tags": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ]
  },
  "994": {
    "title": "Rotting Oranges",
    "level": "Medium",
    "tags": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  "3202": {
    "title": "Find the Maximum Length of Valid Subsequence II",
    "level": "Medium",
    "tags": [
      "Array",
      "Dynamic Programming"
    ]
  },
  "124": {
    "title": "Binary Tree Maximum Path Sum",
    "level": "Hard",
    "tags": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  "200": {
    "title": "Number of Islands",
    "level": "Medium",
    "tags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  "297": {
    "title": "Serialize and Deserialize Binary Tree",
    "level": "Hard",
    "tags": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ]
  },
  "695": {
    "title": "Max Area of Island",
    "level": "Medium",
    "tags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  "141": {
    "title": "Linked List Cycle",
    "level": "Easy",
    "tags": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ]
  },
  "3201": {
    "title": "Find the Maximum Length of Valid Subsequence I",
    "level": "Medium",
    "tags": [
      "Array",
      "Dynamic Programming"
    ]
  },
  "143": {
    "title": "Reorder List",
    "level": "Medium",
    "tags": [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion"
    ]
  },
  "287": {
    "title": "Find the Duplicate Number",
    "level": "Medium",
    "tags": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Bit Manipulation"
    ]
  },
  "208": {
    "title": "Implement Trie (Prefix Tree)",
    "level": "Medium",
    "tags": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  "211": {
    "title": "Design Add and Search Words Data Structure",
    "level": "Medium",
    "tags": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ]
  },
  "704": {
    "title": "Binary Search",
    "level": "Easy",
    "tags": [
      "Array",
      "Binary Search"
    ]
  },
  "1695": {
    "title": "Maximum Erasure Value",
    "level": "Medium",
    "tags": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ]
  },
  "20": {
    "title": "Valid Parentheses",
    "level": "Easy",
    "tags": [
      "String",
      "Stack"
    ]
  },
  "678": {
    "title": "Valid Parenthesis String",
    "level": "Medium",
    "tags": [
      "String",
      "Dynamic Programming",
      "Stack",
      "Greedy"
    ]
  },
  "1717": {
    "title": "Maximum Score From Removing Substrings",
    "level": "Medium",
    "tags": [
      "String",
      "Stack",
      "Greedy"
    ]
  },
  "22": {
    "title": "Generate Parentheses",
    "level": "Medium",
    "tags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  "39": {
    "title": "Combination Sum",
    "level": "Medium",
    "tags": [
      "Array",
      "Backtracking"
    ]
  },
  "46": {
    "title": "Permutations",
    "level": "Medium",
    "tags": [
      "Array",
      "Backtracking"
    ]
  },
  "78": {
    "title": "Subsets",
    "level": "Medium",
    "tags": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ]
  },
  "17": {
    "title": "Letter Combinations of a Phone Number",
    "level": "Medium",
    "tags": [
      "Hash Table",
      "String",
      "Backtracking"
    ]
  },
  "77": {
    "title": "Combinations",
    "level": "Medium",
    "tags": [
      "Backtracking"
    ]
  },
  "3487": {
    "title": "Maximum Unique Subarray Sum After Deletion",
    "level": "Easy",
    "tags": [
      "Array",
      "Hash Table",
      "Greedy"
    ]
  },
  "53": {
    "title": "Maximum Subarray",
    "level": "Medium",
    "tags": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ]
  },
  "70": {
    "title": "Climbing Stairs",
    "level": "Easy",
    "tags": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ]
  },
  "198": {
    "title": "House Robber",
    "level": "Medium",
    "tags": [
      "Array",
      "Dynamic Programming"
    ]
  },
  "148": {
    "title": "Sort List",
    "level": "Medium",
    "tags": [
      "Linked List",
      "Two Pointers",
      "Divide and Conquer",
      "Sorting",
      "Merge Sort"
    ]
  },
  "705": {
    "title": "Design HashSet",
    "level": "Easy",
    "tags": [
      "Array",
      "Hash Table",
      "Linked List",
      "Design",
      "Hash Function"
    ]
  }
}